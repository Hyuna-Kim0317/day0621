1. 클래스 저장하는 방식
	클래스는 원본과 바이너리를 분리하여 저장한다.
	원본 (소스)	- src
	바이너리 (컴퓨터가 이해하는 기계어 : 결과물)	- classes, bin

2. 소스를 관리하는 방식
관련성 있는 소스끼리 디렉토리로 구분하여 묶는다
- 중복방지
- 개발의 효율성
 
---------------------------------------------------------------
클래스(명사)의 구성요소
- 변수 : property(형용사)
- 함수 : method(동사)

---------------------------------------------------------------
메서드

환경변수가 변경되면 모든 프로그램에 broadcast를 한다.
언제?
editplus 가 실행될때?
다시 껐다 켜야 한다.

------------------------------------------------------------------
현업에 나가면 주로 다루는 파일
계좌..

-------------------
encapsulation 은닉화
손상을 막기 위해

( 리모컨 덮개. 손상이 되거나 마음대로 만질 수 있으므로)
내부의 데이터는 전자회로처럼 덮음

은닉화란 물체 자체를 숨기는 게 아니라 물체의 변수만 숨기는 것


// 수업 주제 : 메서드


메서드 문제
3.
1) 자바의 기본 자료형(primitive)은 3개 맞음
2)맞다
3) 틀림

5. 
1) 참
2) 참
3) 아니다 관계가 없다.
4) 틀림	//500 이 나옴
5) 맞음

6.
1) 참	// 주소값이 바뀜
2) 틀림 // 50 // com.price = 50; 
3) 맞음
4) 맞음
5) 맞음
6) 맞음
7) 아니다. 영향을 끼치지 않음

call by value :  보유했던 객체에 영향을 미친다.
call by reference : 값을 보유했던 객체에 영향을 미치지 않는다.

p와 com 은 레퍼런스 변수라고 한다.

up.setColor 가 call by reference 함

주소값이 아니라, 일반데이터가 들어감
up.setPRice(com.price);


가 : computer p => 객체의 주소값 자체를 넘김
나 : com.price 의 값 50 이 복사되어서 넘어감
다 : call by reference
라 : call by value
마: 출력 50



===============

자바는 컴포넌트 : 레고 블럭 조립하는 것처럼...

메서드 중 생성자라는 메서드...(?)
Car car = new Car();

null : 객체 주소값이 없다.



///
자바 객체 자료형 / 기본 자료형

int x = 3; 기본자료형
= 뒤에 데이터를 넣으면 메모리에 올라간다.
Car 는 복잡함.. 로직을 짜야함

생성자 메서드
1) 클래스명과 동일한 메서드
2)
3)

//////
생성자 문제
1.
1) 맞음
2) 맞음
3) 아니다. 기본으로 디폴트 생성자가 올라감
4) 맞다
////////


